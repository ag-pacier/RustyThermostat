//! `SeaORM` Entity. Generated by sea-orm-codegen 0.12.5

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "Communication")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    #[sea_orm(column_name = "Name", column_type = "Text")]
    pub name: String,
    pub active: bool,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_many = "super::alerts::Entity")]
    Alerts,
    #[sea_orm(has_many = "super::controllers::Entity")]
    Controllers,
    #[sea_orm(has_many = "super::sensors::Entity")]
    Sensors,
}

impl Related<super::alerts::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Alerts.def()
    }
}

impl Related<super::controllers::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Controllers.def()
    }
}

impl Related<super::sensors::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Sensors.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
